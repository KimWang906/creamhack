name: Build and Release for Multiple Targets

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-apple-darwin
          - x86_64-pc-windows-gnu
        archive:
          - tar.gz
          - zip

    steps:
      # Checkout the code
      - uses: actions/checkout@v2

      # Install dependencies (Linux only)
      - name: Install build dependencies (Linux)
        if: matrix.target == 'x86_64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config libssl-dev

      # Set up Rust toolchain
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.target }}

      # Compile for the target
      - name: Build for ${{ matrix.target }}
        run: cargo build --release --target ${{ matrix.target }}

      # Archive the release
      - name: Create release archive
        run: |
          mkdir -p release
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            zip -j release/my_project-${{ matrix.target }}.zip target/${{ matrix.target }}/release/my_project.exe
          else
            tar -czf release/my_project-${{ matrix.target }}.tar.gz -C target/${{ matrix.target }}/release my_project
          fi

      # Upload the release artifact
      - name: Upload release artifact
        uses: actions/upload-artifact@v2
        with:
          name: my_project-${{ matrix.target }}
          path: |
            release/my_project-${{ matrix.target }}.tar.gz
            release/my_project-${{ matrix.target }}.zip

      # Create GitHub Release (optional)
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Release ${{ github.ref_name }}
          tag: ${{ github.ref_name }}
          files: |
            release/my_project-${{ matrix.target }}.tar.gz
            release/my_project-${{ matrix.target }}.zip

